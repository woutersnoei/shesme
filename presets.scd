EM( 'ikzoekjeniet', OEM(  ), 'broken', OEM( 'default', EM( 'shiftvar', 0.0, 'pvar', 0.0, 'pbrate', [ 0.5, 1.6 ], 'filter', 0.0 ), 'shifted', EM( 'shiftvar', 24.0, 'pvar', 0.0, 'pbrate', [ 0.5, 1.6 ], 'filter', 0.0 ), 'low', EM( 'shiftvar', 0.0, 'pvar', 0.0, 'pbrate', [ 0.25, 1.0 ], 'filter', -0.5 ) ), 'laughing', OEM( 'default', EM( 'pan', [ -2, 2 ], 'pbrate', 0.97352195825295, 'verb', 0.0, 'brassage', 0.0, 
  'pos', 0.5, 'filter', -0.029921558704453 ), 'dark', EM( 'pan', [ -2, 2 ], 'pbrate', 0.31701243475391, 'verb', 1.0, 'brassage', 0.0, 
  'pos', 0.5, 'filter', -0.43528593117409 ), 'birdlike', EM( 'pan', [ -2, 2 ], 'pbrate', 4.0, 'verb', 1.0, 'brassage', 0.61509994939271, 
  'pos', 0.5, 'filter', 0.72931427125506 ), 'chatter', EM( 'pan', [ -2, 2 ], 'pbrate', 0.97352195825295, 'verb', 0.13164220647773, 'brassage', 1.0, 
  'pos', 0.48532388663968, 'filter', -0.029921558704453 ), 
  'lowish', EM( 'pan', [ -2.0, 2.0 ], 'pbrate', 0.96223321282179, 'verb', 0.66, 'brassage', 0.51802884615385, 
  'pos', 0.2, 'filter', -0.6 ) ), 'notes', OEM(  ), 
  'quotes', OEM( 'long_waitforactive', EM( 'waitTime', 40.0, 'waitForActive', true, 'pan', [ -1, 1 ], 'selection', 0, 
  'filter', 0 ), 'default', EM( 'waitTime', 4.0, 'waitForActive', false, 'pan', [ -1, 1 ], 'selection', 0, 
  'filter', 0 ) ), 'words', OEM( 'all', EM( 'trigger', 1, 'index', [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 ], 'which', 'all' ), 'love', EM( 'trigger', 1, 'index', [ 0, 9 ], 'which', 'all' ) ), 'chords', OEM( 'default', EM( 'hold', false, 'filter', 0.0 ), 'low', EM( 'hold', false, 'filter', -0.40979251012146 ), 'hi', EM( 'hold', false, 'filter', 0.64771002024291 ) ), 'pattern', OEM(  ), 'sfr', OEM( 'sss', EM( 'transpose', 1.6849865951743, 'useWinbuf', false, 'rvar', 0.0, 'speed', 11.370971921683, 
  'tvar', 1.5, 'range', [ 0.1, 0.9 ], 'mode', 's', 'overlap', 8.0, 'convolve', 0.0, 
  'filter', 0.35497654155496 ), 'rrr', EM( 'transpose', 0.0, 'useWinbuf', false, 'rvar', 0.0, 'speed', 11.370971921683, 
  'tvar', 1.5, 'range', [ 0.1, 0.9 ], 'mode', 'r', 'overlap', 8.0, 'convolve', 0.0, 
  'filter', -0.024631367292225 ), 'clicks', EM( 'transpose', 0.25335120643431, 'useWinbuf', true, 'rvar', 1.4155495978552, 'speed', 2.3604199475518, 
  'tvar', 0.25092158176944, 'range', [ 0.1, 0.9 ], 'mode', 'r', 'overlap', 0.125, 'convolve', 1.0, 
  'filter', -0.024631367292225 ), 'sjj', EM( 'rvar', 0.0, 'useWinbuf', false, 'filter', -0.034601206434316, 'speed', 11.370971921683, 
  'tvar', 1.5, 'range', [ 0.1, 0.9 ], 'mode', 's', 'overlap', 8.0, 'convolve', 0.28162701072386, 
  'transpose', -7.1943699731903 ), 
  'tttt', EM( 'rvar', 1.4155495978552, 'useWinbuf', true, 'filter', -0.024631367292225, 'speed', 3.2089820826941, 
  'tvar', 1.2050100536193, 'range', [ 0.1, 0.9 ], 'mode', 's', 'overlap', 0.125, 'convolve', 0.0, 
  'transpose', 0.25335120643431 ), 'rollig', EM( 'transpose', -17.732793522267, 'speed', 43.752413083025, 'tvar', 1.1758545576408, 'range', [ 0.1, 0.9 ], 
  'pan', [ -2.0, 2.0 ], 'mode', 's', 'useWinbuf', true, 'filter', -0.33343876518219, 'convolve', 0.31496062992126, 
  'duck', 0, 'overlap', 0.375, 'rvar', 1.9901139410188 ), 'granular', EM( 'rvar', 1.6499240890688, 'speed', 12.03378721599, 'tvar', 1.1758545576408, 'range', [ 0.1, 0.9 ], 
  'pan', [ -2, 2 ], 'mode', 'r', 'convolve', 0.0, 'filter', 0.89271255060729, 'useWinbuf', true, 
  'duck', 0.0, 'overlap', 0.375, 'transpose', 0.62398785425101 ), 'slow ffs', EM( 'rvar', 12.0, 'speed', 1.0, 'tvar', 0.25092158176944, 'range', [ 0.1, 0.9 ], 
  'pan', [ -2, 2 ], 'mode', 'f', 'convolve', 0.0, 'filter', -0.024631367292225, 'useWinbuf', false, 
  'duck', 0.47150797619505, 'overlap', 0.125, 'transpose', -4.1735829959514 ), 'dripping', EM( 'rvar', 1.4155495978552, 'speed', 1.4981111223534, 'tvar', 0.27726467611336, 'range', [ 0.1, 0.9 ], 
  'pan', [ -2, 2 ], 'mode', 'f', 'convolve', 1.0, 'filter', 0.011196862348178, 'useWinbuf', true, 
  'duck', 0.47150797619505, 'overlap', 0.125, 'transpose', 0.25335120643431 ), 
  'rrr-end', EM( 'transpose', -0.056174089068829, 'speed', 11.370971921683, 'tvar', 1.5, 'range', [ 0.1, 0.9 ], 
  'pan', [ 0.4, 0.6 ], 'mode', 'r', 'useWinbuf', false, 'filter', 0.5511766194332, 'convolve', 0.0, 
  'duck', 0.0, 'overlap', 8.0, 'rvar', 0.0 ) ), 
  'tttt', OEM(  ), 'mumbling', OEM( 'rhythm', EM( 'speed', 4.0, 'duck', 0.0, 'pan', [ -1.0, 1.0 ], 'spvar', false, 
  'verb', 0.0, 'useWinbuf', true, 'filter', -0.013474190283401 ), 'dress', EM( 'speed', 200.0, 'duck', 0.0, 'pan', [ -1.0, 1.0 ], 'spvar', true, 
  'verb', 0.24329453441296, 'useWinbuf', false, 'filter', 0.96046305668016 ), 'low', EM( 'speed', 57.631268099911, 'duck', 0.0, 'pan', [ -1.0, 1.0 ], 'spvar', true, 
  'verb', 0.063670293522267, 'useWinbuf', true, 'filter', -0.87265941295547 ), 'normal', EM( 'speed', 2.7580799439589, 'duck', 0.0, 'pan', [ -1.0, 1.0 ], 'spvar', true, 
  'verb', 0.0, 'useWinbuf', false, 'filter', 0.0084767206477734 ), 
  'fragments', EM( 'speed', 1.1826172793177, 'duck', 0.0, 'pan', [ -1.0, 1.0 ], 'spvar', true, 
  'verb', 0.063670293522267, 'useWinbuf', false, 'filter', 0.47551872469636 ), 'breathe', EM( 'speed', 0.66, 'duck', 0.0, 'pan', [ -1.0, 1.0 ], 'spvar', false, 
  'verb', 0.063670293522267, 'useWinbuf', false, 'filter', 0.80193572874494 ) ), 'humming', OEM(  ), 'rrrr', OEM(  ), 'wapentuig', OEM(  ), 
  'coupler', OEM( 'dress', EM( 'current', EM( 'd2', [ [ 'mumbling', 'filter', [ 0.7, 1, 0.97, 0.75 ], nil ], [ 'mumbling', 'duck', [ 0.3, 0.5, 1, 0 ], nil ], [ 'humming', 'duck', [ 0.3, 0.5, 0, 1 ], nil ], [ 'humming', 'amp', { |which, key, val|
	if( val > 0.3 ) {
		if( ~shesme.humming.active.not ) {~shesme.humming.start; };
		~shesme.wapentuig.end;
	};
}, nil ], [ 'sfr', 'duck', [ 0.3, 0.5, 0, 1 ], nil ] ] ) ), 'off', EM( 'current', EM(  ) ), 'climbing', EM( 'current', EM( 'd2', [ [ 'mumbling', 'speed', [ 0.0125, 0.1, 0, 0.7 ], nil ], [ 'tttt', 'speed', [ 0.0125, 0.1, 0.2, 1 ], nil ] ] ) ), 'rhythm', EM( 'current', EM( 'z2', [ [ 'broken', 'amp', { |which, key, val|
			if( which.active == true ) {
				if( val < 0.4 ) {
					which.end;
				};
			} {
				if( val > 0.6 && { ~shesme.dataNetwork.vals[ \d2 ] < 0.05 } ) {
					which.start;
				};
			};
		}, nil ], [ 'mumbling', 'amp', { |which, key, val|
			if( which.active == true ) {
				if( val > 0.6 && { ~shesme.dataNetwork.vals[ \d2 ] < 0.05 } ) {
					which.end;
				};
			} {
				if( val < 0.4 ) {
					which.start;
				};
			};
		}, nil ] ] ) ), 
  'pattern', EM( 'current', EM( 'd2', [ [ 'pattern', 'scream', [ 0.05, 0.075, 1, 0 ], nil ] ] ) ) ) )